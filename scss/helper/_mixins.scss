@mixin fontText($color, $fontSize, $fontWeight) {
  color: $color;
  font-size: $fontSize;
  font-weight: $fontWeight;
}

@mixin bg-icon($bgIcon) {
  background-image: $bgIcon;
  background-position: center;
  background-repeat: no-repeat;
  width: $bg-wd-1;
  height: $bg-hg-1;
}

@mixin line($line-color) {
  display: inline-block;
  width: 38px;
  height: 3px;
  background-color: $line-color;
  border-radius: 3px;
}

@mixin overlays {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba($color: #000000, $alpha: 0.15);
}

@mixin style-button($bg-btn, $bg-hover-btn, $height-btn, $wid, $text-color) {
  height: $height-btn;
  border-radius: 30px;
  width: $wid;
  background-color: $bg-btn;
  color: $text-color;
  font-weight: $fw-1;
  font-size: $fs-8;
  transition: all 0.4s;
  &:hover {
    background-color: $bg-hover-btn;
    color: $text-color;
    border: 1px solid $bg-btn;
    transform: scale(1.05);
  }
}

@mixin title-setting($fs-h1, $fs-p, $color-h1, $color-p, $fw-h1, $fw-p) {
  h1 {
    @include fontText($color-h1, $fs-h1, $fw-h1);
  }
  p {
    @include fontText($color-p, $fs-p, $fw-p);
  }
}

@mixin responsive($screen) {
  @if (map-has-key($map: $breakpoints, $key: $screen)) {
    $value: map-get(
      $map: $breakpoints,
      $key: $screen,
    );
    @media screen and (max-width: $value) {
      @content;
    }
  } @else {
    @warn "`{$screen}` isn't in breakpoint";
  }
}
